Name          asq
Description   Marchex Asq
RequireTag    Yes
Type          directory

component       asq
marchexbase     /site/${component}
user            asq
group           asq
uid             513
gid             513
workers         10
apt_dependencies mchx-rails4 nodejs
ruby_home       /site/ruby/ruby-2.1
escrowfiles     ${marchexbase}/config/database.yml
cronname        Asq

# build
############################################################################
<Env>
        PATH        ${ruby_home}/bin:/bin:/usr/bin:/site/marchex/bin:/usr/local/bin
        LD_LIBRARY_PATH  /site/oracle_client/instantclient_11_2/
</Env>

#<MachineSpecific>
#        Type          Confgen
#</MachineSpecific>

<Build>
    Type                Manual
    <Commands>
        Command ${ruby_home}/bin/bundle install --without development test --deployment
        Command ${ruby_home}/bin/bundle exec rake assets:precompile --trace
    </Commands>
</Builds>

<Permissions>
        Type        Unix
        Recursive   deploy:deploy skip .
        Recursive   deploy:${group} 775 logs run tmp log
</Permissions>

<Insert>
        Type                 Directory
        <Alike>
                Path             .
                RsyncIncludes    conf/pulley/rsync-common-includes.conf
        </Alike>
#        <MachineSpecific>
#                Path             templates/gen
#                Append           site/${name}
#                RsyncIncludes    conf/pulley/rsync-machine-specific-includes.conf
#        </MachineSpecific>
</Insert>

# deployment
############################################################################

<Option apt>
    Command Exec 0 0 apt-get update
    Command Exec 0 0 apt-get install --yes ${apt_dependencies}
</Option>

<Option db_migrate>
    Command Exec 0 0 cd ${marchexbase} && env PATH=${ruby_home}/bin:/usr/bin:/bin:/site/marchex/bin bundle exec rake db:migrate RAILS_ENV=production
</Option>

<Option db_rollback>
    Command Exec 0 0 cd ${marchexbase} && env PATH=${ruby_home}/bin:/usr/bin:/bin:/site/marchex/bin bundle exec rake db:rollback RAILS_ENV=production
</Option>

<Option init>
    Command Init 98 99 ${marchexbase}/bin/apachectl ${component}
</Option>

<Option logrotate>
    Command exec 0 0 cp ${marchexbase}/conf/pulley/logrotate /etc/logrotate.d/asq
</Option>

<Option crontab>
    Command Exec 0 0 \
        if [ -f ${marchexbase}/templates/${cronname}.crontab ]; then \
            rm -f /etc/cron.d/${cronname}; \
            cp ${marchexbase}/templates/${cronname}.crontab /etc/cron.d/${cronname}; \
        fi
</Option>

<Option stop>
    Command Service ${component} stop
    cd ${marchexbase} && env PATH=${ruby_home}/bin:/usr/bin:/bin:/site/marchex/bin RAILS_ENV=production bundle
    env PATH=${ruby_home}/bin:/usr/bin:/bin:/site/marchex/bin RAILS_ENV=production exec ${marchexbase}/bin/delayed_job stop
</Option>

<Option start>
    Command Service ${component} start
    cd ${marchexbase} && env PATH=${ruby_home}/bin:/usr/bin:/bin:/site/marchex/bin RAILS_ENV=production bundle
    env PATH=${ruby_home}/bin:/usr/bin:/bin:/site/marchex/bin RAILS_ENV=production exec ${marchexbase}/bin/delayed_job -n ${workers} restart
</Option>

<Option users>
        Command Exec 0 0 \
                if ! getent group ${group} >/dev/null 2>&1; then \
                        addgroup --system --gid ${gid} ${group} || exit 1; \
                elif [ "g`getent group ${group} | cut -d: -f3`" != g${gid} ]; then \
                        echo "`hostname` has the wrong gid for the ${group} group" >&2; \
                        exit 1; \
                fi
        Command Exec 0 0 \
                if ! getent passwd ${user} >/dev/null 2>&1; then \
                        adduser --system --gid ${gid} --uid ${uid} ${user} || exit 1; \
                elif [ "u`id -u ${user}`g`id -g ${user}`" != u${uid}g${gid} ]; then \
                        echo "`hostname` has the wrong uid/gid for the ${user} user" >&2; \
                        exit 1; \
                fi
</Option>

<Source production>
        Mode        Both
        <Commands>
                Command Option users
                Command ByDefault stop
                Command Rsync ${marchexbase} nodelete-machinespecific
                Command Exec 0 0 chmod 0640 ${escrowfiles}
                Command Exec 0 0 chgrp ${group} ${escrowfiles}
                Command Descrow ${component} ${escrowfiles}
                Command DotVersion ${marchexbase}
                Command ByDefault apt
                Command ByDefault init
                Command Option db_rollback
                Command ByDefault db_migrate
                Command ByDefault logrotate
                Command ByDefault start
                Command Exec 0 0 chown deploy:${group} ${marchexbase}/log
                Command Exec 0 0 rm -f /etc/cron.d/${cronname}
                Command Exec 0 0 chmod o+x ${marchexbase}/templates/${cronname}.crontab
                Command Exec 0 0 cp ${marchexbase}/templates/${cronname}.crontab /etc/cron.d/${cronname}
        </Commands>
</Source>

<Source qa>
        Mode        Both
        <Commands>
                Command Option users
                Command ByDefault stop
                Command Rsync ${marchexbase} nodelete-machinespecific
                Command Exec 0 0 chmod 0640 ${escrowfiles}
                Command Exec 0 0 chgrp ${group} ${escrowfiles}
                Command Descrow ${component} ${escrowfiles}
                Command DotVersion ${marchexbase}
                Command ByDefault apt
                Command ByDefault init
                Command Option db_rollback
                Command ByDefault db_migrate
                Command ByDefault start
                Command Exec 0 0 rm -f /etc/cron.d/${cronname}
                Command Exec 0 0 chmod o+x ${marchexbase}/templates/${cronname}.crontab
                Command Exec 0 0 cp ${marchexbase}/templates/${cronname}.crontab /etc/cron.d/${cronname}
        </Commands>
</Source>
