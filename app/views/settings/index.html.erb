<div class="panel panel-default">
  <div class="panel-heading">
    <h3 class="panel-title">
      <%= link_to 'Admin Settings', settings_path %>
    </h3>
  </div>
  <div class="panel-body">
    <div class="container">
      <%= form_tag("/settings", method: "post", :class => "form-horizontal") do %>
        <div class="form-group">
          <%= label_tag(:vip_name, "VIP Address", :class => "col-sm-2 control-label") %>
          <div class="col-sm-5">
            <%= text_field_tag(:vip_name, nil, :class => "form-control", :placeholder => "asq.example.com",:disabled => !can?('Set', 'Setting') , :value => Settings.vip_name) %>
          </div>
        </div>

        <div class="form-group">
          <%= label_tag(:result_limit, "Query result limit", :class => "col-sm-2 control-label") %>
          <div class="col-sm-5">
            <%= number_field_tag(:result_limit, nil, :class => "form-control",:disabled => !can?('Set', 'Setting'), :value => Settings.result_limit) %>
          </div>
        </div>

        <div class="form-group">
          <%= label_tag(:db_statement_timeout, "Query Timeout (Seconds)", :class => "col-sm-2 control-label") %>
          <div class="col-sm-5">
            <%= number_field_tag(:db_statement_timeout, nil,:disabled => !can?('Set', 'Setting'), :class => "form-control, query_timeout", :value => Settings.db_statement_timeout) %>
          </div>
        </div>

         <div class="form-group" id="timeout_error" style="display:none">
            <div class='col-sm-2'></div>
            <div class="col-sm-5 alert alert-warning" role="alert"></div>
        </div>

        <div class="form-group">
          <%= label_tag(:tsg_prefix, "TSG link prefix", :class => "col-sm-2 control-label") %>
          <div class="col-sm-5">
            <%= text_field_tag(:tsg_prefix, nil, :class => "form-control",:disabled => !can?('Set', 'Setting'), :value => Settings.tsg_prefix) %>
          </div>
        </div>

        <%# The original implementation of the related tickets view was very specific
          to Marchex, but instead of removing it altogether we've left empty hooks in
          so you can see how to implement ticket system checks yourself. The below
          code, while not commented, will never display unless you un-hide this
          section and change from the default value of false. See the
          check_for_related_tickets method under asq.rb for more info. %>
        <!-- <div class="form-group">
          <%= label_tag(:related_tickets_check, "Check for related tickets", :class => "col-sm-2 control-label") %>
          <div class="col-sm-5">
            <%# We need to use a hidden field here so we can send a "false" if the box isn't checked. %>
            <%= hidden_field_tag(:related_tickets_check, false) %>
            <%= check_box_tag(:related_tickets_check, true, Settings.related_tickets_check == true,:disabled => can?('Set', 'Setting')) %>
          </div>
        </div> -->

        <div class="form-group">
          <%= label_tag(:autosftp_path, "AutoSFTP Path", :class => "col-sm-2 control-label") %>
          <div class="col-sm-5">
            <%= text_field_tag(:autosftp_path, nil, :class => "form-control", :disabled => !can?('Set', 'Setting'), :placeholder => "/path/to/auto-sftp", :value => Settings.autosftp_path) %>
          </div>
        </div>

        <% if can? :update, User %>
          <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
              <%= submit_tag("Save Settings", :class => "btn btn-primary") %>
            </div>
          </div>
        <% end %>
      <% end %> <%# end form_tag %>
    </div>
  </div>
</div>
