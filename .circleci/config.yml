version: 2

jobs:
  build:
    docker: # run the steps with Docker
      - image: circleci/ruby:2.7.5-node # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          LD_LIBRARY_PATH: /opt/oracle/instantclient_12_1
      - image: circleci/postgres:9.5-alpine # database image
        environment:
          POSTGRES_USER: asq
          POSTGRES_DB: asq_test
          POSTGRES_PASSWORD: password
    steps:
      - checkout
      - run:
          name: oracle_instantclient
          command: |
            mv config/features.yml.circleci config/features.yml
            sudo apt-get install libaio1
            sudo mkdir /opt/oracle
            sudo chmod 777 /opt/oracle/
            cd /opt/oracle
            curl -OL https://www.dropbox.com/s/p4tnqhyjjtibsjl/instantclient_install.zip
            sudo unzip instantclient_install.zip
            sudo unzip instantclient-basic-linux.x64-12.1.0.2.0.zip -d /opt/oracle
            sudo unzip instantclient-sdk-linux.x64-12.1.0.2.0.zip -d /opt/oracle
            sudo unzip instantclient-sqlplus-linux.x64-12.1.0.2.0.zip -d /opt/oracle
            cd /opt/oracle/instantclient_12_1 && sudo ln -s libclntsh.so.12.1 libclntsh.so
            sudo mkdir /site
            sudo chmod 777 /site
      # TODO: Look at eiter caching phantomjs so we don't download it every time
      # Alternately, we should just build a Docker image w/ a stable build env.
      - run:
          name: Install phantomjs
          command: |
            if ! [ $(which phantomjs) ]; then
              sudo curl --output /usr/local/bin/phantomjs https://s3.amazonaws.com/circle-downloads/phantomjs-2.1.1
            fi

            sudo chmod ugo+x /usr/local/bin/phantomjs
      - run:
          name: install dependencies
          command: |
            gem update --system
            gem install bundler
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      # Run rspec in parallel
      - run:
          name: Run rspec in parallel
          command: |
            export OPENSSL_CONF=/dev/null
            rspec
